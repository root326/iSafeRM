version: "3.8"

services:


  elastic-search:
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      discovery.type: single-node
      http.host: 0.0.0.0
      transport.host: 127.0.0.1
      xpack.security.enabled: 'false'
    hostname: elastic-search
    deploy:
      restart_policy:
        condition: any
      replicas: {{ elastic_search_replicas|default(1) }}
      placement:
        constraints:
          - node.hostname == aituningnode1
      resources:
        limits:
          cpus: "{{ elastic_search_cpus|default(0.5) }}"
          memory: {{ elastic_search_memory|default(1) }}G
{#    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.1#}
    image: elasticsearch:7.17.18
    ports:
      - target: 9200
        published: 9200
        protocol: tcp
        mode: host
      - target: 9300
        published: 9300
        protocol: tcp
        mode: host


  jaeger:
    command: --es.server-urls=http://elastic-search:9200 --es.num-shards=1 --es.num-replicas=0
      --log-level=error
    environment: {COLLECTOR_ZIPKIN_HTTP_PORT: '9411', SPAN_STORAGE_TYPE: elasticsearch}
    hostname: jaeger
    deploy:
      restart_policy:
        condition: any
      replicas: {{ jaeger_replicas|default(1) }}
      placement:
        constraints:
          - node.hostname == aituningnode1
      resources:
        limits:
          cpus: "{{ jaeger_cpus|default(0.5) }}"
          memory: {{ jaeger_memory|default(1) }}G
    image: jaegertracing/all-in-one:1.43
    ports:
      - target: 16686
        published: 16688
        protocol: tcp
        mode: host


  media-frontend:
    hostname: media-frontend
    image: yg397/media-frontend:xenial
    deploy:
      restart_policy:
        condition: any
      replicas: {{ media_frontend_replicas|default(1) }}
{#      placement:#}
{#        constraints:#}
{#          - node.hostname == aituningnode1#}
      resources:
        limits:
          cpus: "{{ media_frontend_cpus|default(0.1) }}"
          memory: {{ media_frontend_memory|default(0.2) }}G
    ports:
      - target: 8080
        published: 8081
        protocol: tcp
        mode: host
    volumes: ['~/{{ project_name }}/.tmp/.{{ benchmark }}_tmp/media-frontend/lua-scripts:/usr/local/openresty/nginx/lua-scripts',
      '~/{{ project_name }}/.tmp/.{{ benchmark }}_tmp/media-frontend/conf/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf']

  nginx-web-server:
    hostname: nginx-web-server
    image: yg397/openresty-thrift:xenial
    deploy:
      restart_policy:
        condition: any
      replicas: {{ nginx_web_server_replicas|default(1) }}
      placement:
        constraints:
          - node.hostname == aituningnode1
      resources:
        limits:
          cpus: "{{ nginx_web_server_cpus|default(0.3) }}"
          memory: {{ nginx_web_server_memory|default(0.6) }}G
    ports:
      - target: 8080
        published: 8082
        protocol: tcp
        mode: host
    volumes:
      - ~/{{ project_name }}/.tmp/.{{ benchmark }}_tmp/nginx-web-server/lua-scripts:/usr/local/openresty/nginx/lua-scripts
      - ~/{{ project_name }}/.tmp/.{{ benchmark }}_tmp/nginx-web-server/pages:/usr/local/openresty/nginx/pages
      - ~/{{ project_name }}/.tmp/.{{ benchmark }}_tmp/nginx-web-server/conf/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf
      - ~/{{ project_name }}/.tmp/.{{ benchmark }}_tmp/nginx-web-server/jaeger-config.json:/usr/local/openresty/nginx/jaeger-config.json
      - ~/{{ project_name }}/.tmp/.{{ benchmark }}_tmp/gen-lua:/gen-lua
      - ~/{{ project_name }}/.tmp/.{{ benchmark }}_tmp/openresty-thrift/lua-thrift:/usr/local/openresty/lualib/thrift
      - ~/{{ project_name }}/.tmp/.{{ benchmark }}_tmp/keys:/keys

